@use "../base/colors" as *;

// THEME TOGGLE
$themes: (
  light: (
    color: $white,
    filter: blur(10px) opacity(100%) invert(100%),
    background-color: $dark-1,
    border: 2px solid $dark-1,
    backdrop-filter: "",
  ),
  dark: (
    color: $dark-1,
    filter: blur(10px) opacity(50%) saturate(200%),
    background-color: rgba(255, 255, 255, 0.05),
    border: 2px solid $white,
    backdrop-filter: blur(10px),
  ),
);
// Navbar

@mixin apply-bg-theme($theme-name) {
  $theme: map-get($themes, $theme-name);
  background-color: map-get($theme, color);
}

@mixin apply-nav-theme($theme-name) {
  $theme: map-get($themes, $theme-name);
  background-color: map-get($theme, background-color);
  border: map-get($theme, border);
  backdrop-filter: map-get($theme, backdrop-filter);
}

// Home Background
$rainbow-gradient: repeating-linear-gradient(
  100deg,
  $base-color-1 10%,
  $base-color-2 15%,
  $base-color-1 20%,
  $base-color-3 25%,
  $base-color-1 30%
);

@mixin animated-background($theme-name) {
  $theme: map-get($themes, $theme-name);
  filter: map-get($theme, filter);

  position: absolute;
  width: 100%;
  height: 800px;
  $lines: repeating-linear-gradient(
    100deg,
    map-get($theme, color) 0%,
    map-get($theme, color) 7%,
    transparent 10%,
    transparent 12%,
    map-get($theme, color) 16%
  );

  background-image: $lines, $rainbow-gradient;
  background-size: 300%, 200%;
  mask-image: radial-gradient(ellipse at 100% 0%, $dark-1 40%, transparent 70%);

  &::after {
    content: "";
    position: absolute;
    inset: 0;
    background-image: $lines, $rainbow-gradient;
    background-size: 200%, 100%;
    animation: smooth-bg 60s linear infinite;
    mix-blend-mode: difference;
  }
}

// Theme Classes
.light-bg {
  @include apply-bg-theme("light");
}

.dark-bg {
  @include apply-bg-theme("dark");
}
// MEDIA
$breakpoints: (
  "xs": (
    "max-width: 576px",
  ),
  "sm": (
    "max-width: 768px",
  ),
  "md": (
    "max-width: 992px",
  ),
  "lg": (
    "max-width: 1200px",
  ),
  "xl": (
    "max-width: 1400px",
  ),
  "xxl": (
    "max-width >= 1400px",
  ),
);

@mixin breakpoint($user-value) {
  $breakpoint-map: map-get($breakpoints, $user-value);
  @if $breakpoint-map {
    @media (#{$breakpoint-map}) {
      @content;
    }
  }
}
